(()=>{"use strict";var n={146:(n,e,a)=>{a.r(e)},623:(n,e,a)=>{a.r(e)},831:(n,e,a)=>{a.r(e)},218:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getFooter=void 0,e.getFooter=function(){var n=document.getElementById("footer"),e=document.querySelector("body");null!=n&&(null==e?void 0:e.classList.contains("first"))?n.innerHTML='\n      <div class="footer-inner">\n  <a href="./index.html">LOGO</a>\n  <ul class="footer__list">\n    <li class="footer__item">\n      <a href="./index.html">Home</a>\n    </li>\n    <li class="footer__item">\n      <a href="../about/">About</a>\n    </li>\n    <li class="footer__item">\n      <a href="../service/">Service</a>\n    </li>\n    <li class="footer__item">\n      <a href="../contact/">Contact</a>\n    </li>\n  </ul>\n</div>':null!=n&&(null==e?void 0:e.classList.contains("second"))?n.innerHTML='\n      <div class="footer-inner">\n  <a href="../index.html">LOGO</a>\n  <ul class="footer__list">\n    <li class="footer__item">\n      <a href="../index.html">Home</a>\n    </li>\n    <li class="footer__item">\n      <a href="../about/">About</a>\n    </li>\n    <li class="footer__item">\n      <a href="../service/">Service</a>\n    </li>\n    <li class="footer__item">\n      <a href="../contact/">Contact</a>\n    </li>\n  </ul>\n</div>':null!=n&&(null==e?void 0:e.classList.contains("third"))&&(n.innerHTML='\n      <div class="footer-inner">\n  <a href="../../index.html">LOGO</a>\n  <ul class="footer__list">\n    <li class="footer__item">\n      <a href="../../index.html">Home</a>\n    </li>\n    <li class="footer__item">\n      <a href="../../about/">About</a>\n    </li>\n    <li class="footer__item">\n      <a href="../../service/">Service</a>\n    </li>\n    <li class="footer__item">\n      <a href="../../contact/">Contact</a>\n    </li>\n  </ul>\n</div>')}},548:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getHeader=void 0,e.getHeader=function(){var n=document.getElementById("header"),e=document.querySelector("body");null!=n&&(null==e?void 0:e.classList.contains("first"))?n.innerHTML='\n    <div class="header-inner">\n  <h1 class="header__logo">\n    <a href="./index.html">LOGO</a>\n  </h1>\n  <nav class="g-nav">\n    <ul class="g-nav__list">\n      <li class="g-nav__item">\n        <a href="./">Home</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="./about/">About</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="./service/">Service</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="./contact/">Contact</a>\n      </li>\n    </ul>\n  </nav>\n</div>':null!=n&&(null==e?void 0:e.classList.contains("second"))?n.innerHTML='\n    <div class="header-inner">\n  <h1 class="header__logo">\n    <a href="../index.html">LOGO</a>\n  </h1>\n  <nav class="g-nav">\n    <ul class="g-nav__list">\n      <li class="g-nav__item">\n        <a href="../index.html">Home</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../about/">About</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../service/">Service</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../contact/">Contact</a>\n      </li>\n    </ul>\n  </nav>\n</div>':null!=n&&(null==e?void 0:e.classList.contains("third"))&&(n.innerHTML='\n    <div class="header-inner">\n  <h1 class="header__logo">\n    <a href="../../index.html">LOGO</a>\n  </h1>\n  <nav class="g-nav">\n    <ul class="g-nav__list">\n      <li class="g-nav__item">\n        <a href="../../index.html">Home</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../../about/">About</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../../service/">Service</a>\n      </li>\n      <li class="g-nav__item">\n        <a href="../../contact/">Contact</a>\n      </li>\n    </ul>\n  </nav>\n</div>')}}},e={};function a(l){var i=e[l];if(void 0!==i)return i.exports;var t=e[l]={exports:{}};return n[l](t,t.exports,a),t.exports}a.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{a(623),a(146),a(831);var n=a(218);(0,a(548).getHeader)(),(0,n.getFooter)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,